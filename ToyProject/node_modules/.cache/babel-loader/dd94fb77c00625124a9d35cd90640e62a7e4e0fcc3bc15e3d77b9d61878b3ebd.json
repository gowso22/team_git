{"ast":null,"code":"var _jsxFileName = \"/Users/KimDaeHee_off/Documents/[\\u110B\\u1172\\u1103\\u1166\\u1106\\u1175x\\u1109\\u1173\\u1102\\u1161\\u110B\\u1175\\u1111\\u1165\\u1111\\u1162\\u11A8\\u1110\\u1169\\u1105\\u1175] 10\\u110C\\u116E \\u110B\\u116A\\u11AB\\u1109\\u1165\\u11BC-\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173 \\u110F\\u1162\\u11B7\\u1111\\u1173 React/Team/team_git/ToyProject/src/components/login.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, signInWithEmailAndPassword } from \"../fbase\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [loginState, setLoginState] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const email = event.target.elements.email.value;\n    const password = event.target.elements.password.value;\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log(\"로그인 성공\");\n      setLoginState(true);\n      navigate(\"/cafeList\");\n    }).catch(error => {\n      console.log(\"로그인 실패\", error);\n      if (error.code === \"auth/user-not-found\" || error.code === \"auth/wrong-password\") {\n        setErrorMessage(\"없는 회원입니다.\");\n      } else {\n        setErrorMessage(\"로그인에 실패했습니다.\");\n      }\n    });\n  };\n  const [userData, setUserData] = useState(null);\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(data => {\n      setUserData(data.user);\n      console.log(data);\n      navigate(\"/cafeList\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"\\uAD6C\\uAE00\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), userData ? userData.displayName : null, /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signin\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"ApuhXnphyC966rjsZSuCnBBBXsI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","auth","signInWithEmailAndPassword","GoogleAuthProvider","signInWithPopup","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","loginState","setLoginState","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","email","target","elements","value","password","then","userCredential","console","log","catch","error","code","userData","setUserData","handleGoogleLogin","provider","data","user","err","children","onSubmit","type","placeholder","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","displayName","to","_c","$RefreshReg$"],"sources":["/Users/KimDaeHee_off/Documents/[유데미x스나이퍼팩토리] 10주 완성-프로젝트 캠프 React/Team/team_git/ToyProject/src/components/login.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth, signInWithEmailAndPassword } from \"../fbase\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = () => {\n  const [loginState, setLoginState] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const email = event.target.elements.email.value;\n    const password = event.target.elements.password.value;\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        console.log(\"로그인 성공\");\n        setLoginState(true);\n        navigate(\"/cafeList\");\n      })\n      .catch((error) => {\n        console.log(\"로그인 실패\", error);\n        if (\n          error.code === \"auth/user-not-found\" ||\n          error.code === \"auth/wrong-password\"\n        ) {\n          setErrorMessage(\"없는 회원입니다.\");\n        } else {\n          setErrorMessage(\"로그인에 실패했습니다.\");\n        }\n      });\n  };\n\n  const [userData, setUserData] = useState(null);\n\n  function handleGoogleLogin() {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider)\n      .then((data) => {\n        setUserData(data.user);\n        console.log(data);\n        navigate(\"/cafeList\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"이메일을 입력하세요\" name=\"email\" />\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호를 입력하세요\"\n          name=\"password\"\n        />\n        <input type=\"submit\" value=\"로그인\" />\n      </form>\n      {errorMessage && <p>{errorMessage}</p>}\n      <button onClick={handleGoogleLogin}>구글로그인</button>\n      {userData ? userData.displayName : null}\n      <Link to=\"/signin\">\n        <p>회원가입</p>\n      </Link>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}